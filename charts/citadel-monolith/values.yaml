imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: false
  automount: true
  annotations: {}
  name: ""

common:
  grafana:
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: ""
  environment: dev
  nodeSelector: {}
  tolerations: []
  affinity: {}
  imagePullSecrets: []
    # - name: regcred
  sharedPVCs: []
    # - name: static-storage
    #   mountPath: /static
    #   storageClass: csi-s3
    #   size: 10Gi
    #   accessModes:
    #     - ReadWriteMany
  sharedSecrets: []
    # - my-secret-name
    # - another-secret-name

  env: []
    # - name: TZ
    #   value: Asia/Irkutsk
  topologySpreadConstraints:
    - maxSkew: 1
      topologyKey: topology.kubernetes.io/zone
      whenUnsatisfiable: ScheduleAnyway
      labelSelector:
        matchLabels:
          component: ""
  infisical:
    enabled: false
    url: http://infisical-standalone-infisical.infisical.svc.cluster.local:8080/api
    resyncInterval: 10
    commonSecret:
      enabled: false
      projectSlug: ""
      secretsPath: /
      credentialsRef:
        secretName: client-infisical-secrets
  ingress:
    className: nginx

cronjobs: []
  # - name: backup
  #   enabled: false
  #   schedule: "0 2 * * *"  # Каждый день в 2:00
  #   timeZone: "UTC"
  #   concurrencyPolicy: Forbid
  #   successfulJobsHistoryLimit: 3
  #   failedJobsHistoryLimit: 1
  #   startingDeadlineSeconds: 300
  #   suspend: false
  #   command: ["python"]
  #   args: ["manage.py", "backup"]
  #   env: []
  #   image:
  #     repository: nginx
  #     pullPolicy: IfNotPresent
  #     tag: ""
  #   resources:
  #     limits:
  #       cpu: 100m
  #       memory: 128Mi
  #     requests:
  #       cpu: 100m
  #       memory: 128Mi
  #   backoffLimit: 3
  #   activeDeadlineSeconds: 3600
  #   podAnnotations: {}
  #   podSecurityContext: {}
  #   securityContext: {}
  #   imagePullSecrets: []

jobs:
  - name: migration
    enabled: false
    command: ["python"]
    args: ["manage.py", "migrate"]
    env: []
    image:
      repository: nginx
      pullPolicy: IfNotPresent
      tag: ""

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

applications:
  - name: nginx
    replicaCount: 1
    env: []
    image:
      repository: nginx
      pullPolicy: IfNotPresent
      tag: ""

    service:
      type: ClusterIP
      port: 80

    # This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
    ingress:
      enabled: true
      annotations: {}
        # kubernetes.io/ingress.class: nginx
        # kubernetes.io/tls-acme: "true"
      hosts:
        - host: chart-example.local
          paths:
            - path: /
              pathType: ImplementationSpecific
      tls: []
      #  - secretName: chart-example-tls
      #    hosts:
      #      - chart-example.local

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

    # This is to setup the liveness, readiness and startup probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
    startupProbe:
      httpGet:
        path: /
        port: http
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
    livenessProbe:
      httpGet:
        path: /
        port: http
    readinessProbe:
      httpGet:
        path: /
        port: http

    infisical:
      enabled: false
      projectSlug: ""
      secretsPath: /
      credentialsRef:
        secretName: client-infisical-secrets

    # ServiceMonitor configuration for this application
    serviceMonitor:
      enabled: false
      interval: 30s
      scrapeTimeout: 10s
      path: /metrics
      port: http
      labels: {}
      annotations: {}
